generator client {
  provider = "cargo prisma"
  output   = "../src/db.rs"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id      Int       @id @default(autoincrement())
  email   String    @unique
  password String   
  name    String?
  role    Role      @default(account)
  profile Profile?
  Vote    Vote[]
  Comment Comment[]
}

model Profile {
  id     Int       @id @default(autoincrement())
  bio    String
  account   Account   @relation(fields: [accountId], references: [id])
  accountId Int       @unique
}

model Tag {
  id     Int    @id @default(autoincrement())
  name   String
  Idea   Idea?  @relation(fields: [ideaId], references: [id])
  ideaId Int?
}

model Vote {
  id     Int      @id @default(autoincrement())
  voteType VoteType
  account   Account?    @relation(references: [id], fields: [accountId])
  idea   Idea?    @relation(fields: [ideaId], references: [id])
  ideaId Int?
  accountId Int?
}

model Comment {
  id     Int    @id @default(autoincrement())
  body   String
  account   Account?  @relation(references: [id], fields: [accountId])
  Idea   Idea?  @relation(fields: [ideaId], references: [id])
  ideaId Int?
  accountId Int?
}

model Idea {
  id           Int       @id @default(autoincrement())
  title        String    @db.VarChar(255)
  body         String
  comments     Comment[]
  votes        Vote[]
  tags         Tag[]
  ///  Related Ideas self refence 
  relatedId    Int?
  related      Idea?     @relation("RelatedIdeas", fields: [relatedId], references: [id])
  relatedIdeas Idea[]    @relation("RelatedIdeas")
  created_at   DateTime  @default(now()) @db.Timestamp(6)
  updated_at   DateTime  @default(now()) @db.Timestamp(6)
}

enum Role {
  account
  ADMIN
}

enum VoteType {
  UP
  DOWN
}
